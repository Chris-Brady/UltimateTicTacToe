/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import ultimatetictactoe.UltimateTicTacToeClient;
import ultimatetttwsc.TTTWebService;

/**
 *
 * @author chris
 */
public class Menu extends javax.swing.JPanel
{
    private JScrollPane p;
    private JPanel pView;
    private UltimateTicTacToeClient game;
    private TTTWebService proxy;
    
    public Menu(UltimateTicTacToeClient game, TTTWebService proxy)
    {
        initComponents();
        this.game = game;
        this.proxy = proxy;
        pView = new JPanel();
        pView.setLayout(new GridLayout(0,1));
        p = new JScrollPane(pView);
        openGamesPanel.add(p);
    }
    
    private void refresh()
    {
        try
        {
            String result = proxy.showOpenGames();
            String mine = proxy.showMyOpenGames(game.getUserID());
            switch(result)
            {
                case "ERROR-NOGAMES":
                    pView.removeAll();
                    pView.add(new JLabel("No games!"));
                    pView.revalidate();
                    break;
                case "ERROR-DB":
                        game.alertUser("Oops!\nError connecting to database!");
                    break;
                default:
                    pView.removeAll();
                    String[] arr = result.split("\n");
                    
                    if(!(mine.equals("ERROR-NOGAMES"))&&!(mine.equals("DB-ERROR")))
                    {
                        ArrayList<String> tmp = new ArrayList<String>();
                        for(int i=0;i<arr.length;i++)
                        {
                            if(!mine.contains(arr[i]))
                            {
                                tmp.add(arr[i]);
                            }
                        }
                        arr = new String[tmp.size()];
                        for(int i=0;i<tmp.size();i++)
                            arr[i]=tmp.get(i);
                    }
                    
                    for(int i = 0;i<arr.length;i++)
                    {
                        String[] tmp = arr[i].split(",");
                        pView.add(new OpenGame(tmp[0],tmp[1],this));
                    }
                    pView.revalidate();
            }
            
        }
        catch(Exception e)
        {
            game.alertUser("Oops!\n"+e.toString());
        }
    }
    
    private void newGame()
    {
        String gameKey = proxy.newGame(game.getUserID());
        switch(gameKey)
        {
            case"ERROR-NOTFOUND":
            case"ERROR-RETRIEVE":
            case"ERROR-INSERT":
            case"ERROR-DB":
                game.alertUser("Oops!\nDatabase Error!");
                break;
            default:
                GamePanel newgame = new GamePanel(game,proxy,Integer.parseInt(gameKey),TabbedPane,1);
                this.TabbedPane.addTab(gameKey, null, newgame);
                TabbedPane.setSelectedIndex(TabbedPane.indexOfTab(gameKey));
        }
    }
    
    public void joinGame(int gid, OpenGame clicked)
    {
        pView.remove(clicked);
        String result = proxy.joinGame(game.getUserID(), gid);
        switch(result)
        {
            case"ERROR-DB":
                game.alertUser("Oops!\nDatabase Error!");
                break;
            case"0":
                game.alertUser("Oops!\nSomething funky happened!!");
                break;
            default:
                GamePanel newgame = new GamePanel(game,proxy,gid,TabbedPane,2);
                TabbedPane.addTab(gid+"", null, newgame);
                TabbedPane.setSelectedIndex(TabbedPane.indexOfTab(gid+""));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        TabbedPane = new javax.swing.JTabbedPane();
        OpenGames = new javax.swing.JPanel();
        refreshButton = new javax.swing.JButton();
        blankPanel = new javax.swing.JPanel();
        openGamesPanel = new javax.swing.JPanel();
        NewGameButton = new javax.swing.JButton();
        LeaderBoard = new javax.swing.JPanel();
        openGamesPanel1 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setLayout(new java.awt.GridLayout(1, 2));

        OpenGames.setPreferredSize(new java.awt.Dimension(512, 256));

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout blankPanelLayout = new javax.swing.GroupLayout(blankPanel);
        blankPanel.setLayout(blankPanelLayout);
        blankPanelLayout.setHorizontalGroup(
            blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        blankPanelLayout.setVerticalGroup(
            blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 292, Short.MAX_VALUE)
        );

        openGamesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Games"));
        openGamesPanel.setLayout(new java.awt.GridLayout(0, 1));

        NewGameButton.setText("New Game");
        NewGameButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                NewGameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OpenGamesLayout = new javax.swing.GroupLayout(OpenGames);
        OpenGames.setLayout(OpenGamesLayout);
        OpenGamesLayout.setHorizontalGroup(
            OpenGamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpenGamesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(openGamesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OpenGamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NewGameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(blankPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        OpenGamesLayout.setVerticalGroup(
            OpenGamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpenGamesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OpenGamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openGamesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(OpenGamesLayout.createSequentialGroup()
                        .addComponent(blankPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(NewGameButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshButton)))
                .addContainerGap())
        );

        TabbedPane.addTab("Games", OpenGames);

        openGamesPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Games"));
        openGamesPanel1.setLayout(new java.awt.GridLayout(0, 1));

        javax.swing.GroupLayout LeaderBoardLayout = new javax.swing.GroupLayout(LeaderBoard);
        LeaderBoard.setLayout(LeaderBoardLayout);
        LeaderBoardLayout.setHorizontalGroup(
            LeaderBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeaderBoardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(openGamesPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addGap(87, 87, 87))
        );
        LeaderBoardLayout.setVerticalGroup(
            LeaderBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeaderBoardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(openGamesPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabbedPane.addTab("Leaderboard", LeaderBoard);

        add(TabbedPane);
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_refreshButtonActionPerformed
    {//GEN-HEADEREND:event_refreshButtonActionPerformed
        refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void NewGameButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_NewGameButtonActionPerformed
    {//GEN-HEADEREND:event_NewGameButtonActionPerformed
        newGame();
    }//GEN-LAST:event_NewGameButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LeaderBoard;
    private javax.swing.JButton NewGameButton;
    private javax.swing.JPanel OpenGames;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JPanel blankPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel openGamesPanel;
    private javax.swing.JPanel openGamesPanel1;
    private javax.swing.JButton refreshButton;
    // End of variables declaration//GEN-END:variables
}
